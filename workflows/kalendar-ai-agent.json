{
  "createdAt": "2025-08-16T07:33:06.277Z",
  "updatedAt": "2025-08-16T07:33:17.000Z",
  "id": "qX1QQl8Nd27eKnm9",
  "name": "kalendar-ai-agent",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1104,
        288
      ],
      "id": "4acc601d-8617-4cb6-8eb9-7a98e1047a76",
      "name": "Telegram Trigger",
      "webhookId": "45a20069-fe0a-4809-a434-62186e1427df"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Nutzer query: {{ $json.message.text }}",
        "options": {
          "systemMessage": "=# Übersicht\n\nDu bist ein Kalenderassistent. Deine Aufgabe ist es, die eingehende Anfrage zu analysieren und die Absicht des Nutzers zu erkennen.\n\n## Tools\n\nContacts – Verwende dieses Tool, um Kontaktinformationen wie E-Mail-Adressen abzurufen. Du musst dieses Tool verwenden, wenn der Nutzer ein Ereignis mit einem Teilnehmer erstellen möchte. Wenn kein Teilnehmer angegeben ist, musst du dieses Tool nicht verwenden.\n\nGet_Events – Verwende dieses Tool, wenn der Nutzer ein Ereignis erstellen, löschen oder aktualisieren möchte. Du solltest die Details des Ereignisses bereitstellen, um sicherzustellen, dass es sich um das richtige Ereignis handelt, das gelöscht oder aktualisiert werden soll.\n\n## Regeln\n\nDu musst immer die Funktion „Ereignisse abrufen“ verwenden, um sicherzustellen, dass es keine Terminkonflikte gibt.\nWenn du gebeten wirst, ein Ereignis zu verschieben, zu aktualisieren oder zu löschen, musst du „Ereignisse abrufen“ verwenden, um das Ereignis zu bestätigen. Gib dabei die Details des Ereignisses wie Datum, Uhrzeit und E-Mail-Adressen der Teilnehmer an.\n\n## Ausgabe\n\nGib die Anfrage des Nutzers wieder und stelle bei Bedarf Rückfragen zur Klärung.\nGib immer die E-Mail-Adresse des angeforderten Kontakts aus, falls der Nutzer dies wünscht.\nFalls es zwei Einträge für denselben Namen gibt, gib die E-Mail-Adresse sowie die Art des Kontakts an.\n\n## Abschließende Hinweise\nHier ist das aktuelle Datum/Uhrzeit: {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -960,
        288
      ],
      "id": "46f015ad-1c6c-4cd6-8f76-d3477dde7493",
      "name": "Intent Agent"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "s.claes.work@gmail.com",
          "mode": "list",
          "cachedResultName": "s.claes.work@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', `12:01 AM of the day the user requested`, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', `11:59 PM of the day the user requested`, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -896,
        464
      ],
      "id": "d6389e1a-a5a9-4905-b272-353186b5ad02",
      "name": "Get_Events"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3ab6c175-d35c-48a3-a9db-5162f962d5f9",
              "name": "intent",
              "value": "={{ $json.output }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -640,
        288
      ],
      "id": "5fd341ee-a8d6-4176-b87f-ed58aba57de2",
      "name": "Set Intent"
    },
    {
      "parameters": {
        "inputText": "={{ $json.result.text }}",
        "categories": {
          "categories": [
            {
              "category": "Genehmigt",
              "description": "Der Nutzer bestätigt oder stimmt unserer Anfrage zu. Das bedeutet, dass er anerkennt, dass die bereitgestellten Informationen oder Maßnahmen korrekt sind und wir fortfahren können. Genehmigungsnachrichten enthalten oft Formulierungen wie:\n„Ja“\n„Sieht gut aus für mich“\n„Senden“\n„Korrekt“\n„Genehmigt“\n„Das funktioniert“\n„Klingt gut“\n„Mach weiter“"
            },
            {
              "category": "Abgelehnt",
              "description": "Der Nutzer gibt Feedback, das keine Zustimmung signalisiert. Dies kann Änderungswünsche, Korrekturen oder zusätzliche Klärungen umfassen. Eine Ablehnung kann auch die Angabe eines E-Mail-Typs beinhalten, wie z. B. „geschäftlich“ oder „privat“.\n\nBeispiele für Ablehnungsformulierungen:\n„Abgelehnt“\n„Geschäftlich“\n„Ändere die Uhrzeit“\n„Privat“\n„Beide löschen“\n„Das erste löschen“\n„Heute“\n„Morgen“\n„22. Februar“"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        -368,
        288
      ],
      "id": "400ecf3a-b1cb-4780-903d-e8cd1601e239",
      "name": "Check Feedback"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Ursprüngliche Absicht: {{ $('Set Intent').item.json.intent }}\n\nFeedback des Nutzers: {{ $json.data.text }}",
        "options": {
          "systemMessage": "=# Übersicht\n\nDu bist ein Korrekturassistent. Deine Aufgabe ist es, die ursprüngliche Ausgabe zu überprüfen und basierend auf dem Feedback des Nutzers zu korrigieren.\n\n## Ausgabe\n\nDeine Aufgabe ist es, die neue Absicht der Anfrage auszugeben.\nGib immer alle erforderlichen Details an, wie die E-Mail-Adressen der Teilnehmer, Uhrzeit, Datum, Zusammenfassung usw.\nStelle bei Bedarf eine Klärungsfrage. Wenn es nichts zu klären gibt, frage einfach: „Ist das korrekt?"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        0,
        384
      ],
      "id": "2e91b229-9399-4062-b2d8-14c2de40d71f",
      "name": "Correction Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Set Intent').item.json.intent }}",
        "options": {
          "systemMessage": "=# Übersicht\n\nDu bist ein Kalenderassistent. Deine Aufgaben umfassen das Erstellen, Abrufen und Löschen von Terminen im Kalender des Nutzers.\n\n**Kalenderverwaltungs-Tools**\n\n- Verwende „Termin mit Teilnehmer erstellen“, wenn ein Ereignis einen Teilnehmer beinhaltet.\n- Verwende „Termin erstellen“ für Einzeltermine.\n- Verwende „Termine abrufen“, um den Kalenderplan abzurufen, wenn dies gewünscht wird.\n- Verwende „Termin löschen“, um ein Ereignis zu entfernen. Du musst zuerst „Termine abrufen“ nutzen, um die ID des zu löschenden Termins zu erhalten.\n- Verwende „Termin aktualisieren“, um einen Termin zu ändern. Auch hier musst du zuerst „Termine abrufen“ verwenden, um die ID des zu aktualisierenden Termins zu ermitteln.\n\n## Regeln\n\nSetze die eingehende Anfrage direkt in eine Aktion um. Ignoriere Klärungsfragen und handle ausschließlich basierend auf der erhaltenen Absicht.\n\n## Abschließende Hinweise\n\nAktuelles Datum/Uhrzeit: {{ $now }}\nFalls keine Dauer für einen Termin angegeben wird, gehe davon aus, dass er eine Stunde dauert."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        0,
        0
      ],
      "id": "241dc2e0-4968-4685-9b1c-2b71b4e98f0e",
      "name": "Calendar Agent"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "s.claes.work@gmail.com",
          "mode": "list",
          "cachedResultName": "s.claes.work@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        32,
        224
      ],
      "id": "8875e401-0e97-49f6-8e56-ff53c29ce781",
      "name": "Create Event"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "s.claes.work@gmail.com",
          "mode": "list",
          "cachedResultName": "s.claes.work@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Attendees', ``, 'string') }}"
          ],
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        144,
        224
      ],
      "id": "161f8b7b-4a19-4195-8579-1b81afc2001a",
      "name": "Create Event with Attendee"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "s.claes.work@gmail.com",
          "mode": "list",
          "cachedResultName": "s.claes.work@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {
          "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
          "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        384,
        224
      ],
      "id": "6d15eeca-a48f-4902-96cf-6f4121c9c69a",
      "name": "Update Event"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "s.claes.work@gmail.com",
          "mode": "list",
          "cachedResultName": "s.claes.work@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', `12:01 AM of the day the user requested`, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', `11:59 PM of the day the user requested`, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        272,
        224
      ],
      "id": "fcf602bd-23c6-4c15-ab8a-cd02cdd3dcef",
      "name": "Get Events"
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "s.claes.work@gmail.com",
          "mode": "list",
          "cachedResultName": "s.claes.work@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        512,
        224
      ],
      "id": "ce958457-e9ab-41eb-94cf-7f03b2c0ace1",
      "name": "Delete Event"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        320,
        0
      ],
      "id": "29525139-ba0f-43d3-acb2-3cb9be843e59",
      "name": "Response",
      "webhookId": "2ab05328-c0b6-462c-a662-2264114c417f"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1h8dSyYpe0BcOUqd13j7Vu6-yJR2INfV7YV3aenvbY2w",
          "mode": "list",
          "cachedResultName": "Test Kontakte",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1h8dSyYpe0BcOUqd13j7Vu6-yJR2INfV7YV3aenvbY2w/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Kontakte",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1h8dSyYpe0BcOUqd13j7Vu6-yJR2INfV7YV3aenvbY2w/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.5,
      "position": [
        -784,
        464
      ],
      "id": "7d258da2-26fb-4a44-89c5-d1a443dd4700",
      "name": "Contacts"
    },
    {
      "parameters": {
        "sessionKey": "=chat_with_{{ $('Telegram Trigger').first().json.message.chat.id }}",
        "contextWindowLength": 12
      },
      "id": "2beb0a31-460a-4ed7-ae01-e61207517ff5",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        -1024,
        464
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -288,
        528
      ],
      "id": "8fa53995-bc49-4bef-8ee8-a735f789db6d",
      "name": "4o"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.intent }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -496,
        288
      ],
      "id": "41eb1797-14db-4552-9642-6779d1750af3",
      "name": "Answer User",
      "webhookId": "06135021-087d-4558-be06-94de90f2f053"
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Intent Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get_Events": {
      "ai_tool": [
        [
          {
            "node": "Intent Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Intent Agent": {
      "main": [
        [
          {
            "node": "Set Intent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Intent": {
      "main": [
        [
          {
            "node": "Answer User",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Feedback": {
      "main": [
        [
          {
            "node": "Calendar Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Correction Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Correction Agent": {
      "main": [
        [
          {
            "node": "Set Intent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Calendar Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calendar Agent": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contacts": {
      "ai_tool": [
        [
          {
            "node": "Intent Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Intent Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "4o": {
      "ai_languageModel": [
        [
          {
            "node": "Correction Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Calendar Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Check Feedback",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Intent Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Answer User": {
      "main": [
        [
          {
            "node": "Check Feedback",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "e838b01e-6481-4418-8159-e86a785562df",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-16T07:33:06.286Z",
      "updatedAt": "2025-08-16T07:33:06.286Z",
      "role": "workflow:owner",
      "workflowId": "qX1QQl8Nd27eKnm9",
      "projectId": "nZwUmEIL638ig6xE"
    }
  ],
  "tags": []
}
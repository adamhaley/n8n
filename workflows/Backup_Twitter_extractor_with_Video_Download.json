{
  "createdAt": "2025-07-31T00:20:15.482Z",
  "updatedAt": "2025-08-19T17:27:23.000Z",
  "id": "0pOnipWtAgVcVBzC",
  "name": "Backup Twitter extractor with Video Download",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        1728,
        560
      ],
      "id": "de0b09c9-c521-47dc-abe6-e0aef22085ad",
      "name": "Merge first tweet and others"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -512,
        816
      ],
      "id": "5a2c935d-2ec8-45e5-b510-7402e83f1c84",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "content": "## Extract first tweet\n",
        "height": 500,
        "width": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        400
      ],
      "id": "4b106192-eb3d-4c70-8e4d-1f69d3e82914",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Extract thread tweets\n",
        "height": 500,
        "width": 840
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        464,
        400
      ],
      "id": "64152f65-9f3b-44e8-9064-b52e1e31e565",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Merge all tweets with order\n",
        "height": 500,
        "width": 588,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1328,
        400
      ],
      "id": "1b21197a-9b95-48c1-b526-26cb744d442b",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -512,
        560
      ],
      "id": "c0e1d457-5b60-4fbe-9ebe-045f8b139c18",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "content": "## Extract first tweet\n- Extracts first tweet of the thread from input tweet link",
        "height": 360,
        "width": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "dc231386-29ee-4a7d-b3a9-0325537c745c",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Extract thread tweets\n- Iterates over each reply to first tweet\n- Checks if reply is related to first tweet or not\n- If reply is continuation of first tweet, saves it into an array",
        "height": 360,
        "width": 840
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        464,
        0
      ],
      "typeVersion": 1,
      "id": "467e3ac9-fb35-4bd8-83d2-ab33295cab20",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## Merge all tweets with order\n- Merge first tweet and other tweets in thread\n- Sometimes there is an empty array after merging all tweets, so filter it",
        "height": 360,
        "width": 584,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1328,
        0
      ],
      "typeVersion": 1,
      "id": "3e32e8bf-dab1-4fd7-a379-288516efc580",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "## Input\n- You can trigger this workflow from another workspace\n- You can set manual trigger to test how it works\n- Suggestion: \nCreate another workflow, which gets input from twitter, notion, spreadsheet etc\nThen calls this workflow to fetch threads\n\nThis workflow will return all fetched tweets end of the pipeline",
        "height": 360,
        "width": 440,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        144
      ],
      "typeVersion": 1,
      "id": "e9b5e1c7-107e-4bc0-9425-e8fb6c599c91",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "url": "https://api.twitterapi.io/twitter/tweets",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "tweet_ids",
              "value": "={{ $json.tweet_id }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        288,
        464
      ],
      "id": "3c02a610-c40d-4630-8b9d-a9390140acfc",
      "name": "Get first tweet",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lVKFxR2s5cquKAeb",
          "name": "TWITTERAPI.IO HEADER AUTH"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const tweetsData = $json.tweets[0];\nreturn {\n  conversationId: tweetsData.conversationId,\n  author_id: tweetsData.author.id,\n  nextCursor: null,\n  all_replies: []\n};"
      },
      "name": "Extract Conversation and Author ID",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -1408,
        1184
      ],
      "id": "cc93d429-8add-4171-a9dd-d5f982d7658a"
    },
    {
      "parameters": {
        "url": "https://api.twitterapi.io/twitter/tweet/advanced_search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "=conversation_id:{{$json.tweets[0].id }}"
            }
          ]
        },
        "options": {
          "pagination": {
            "pagination": {
              "parameters": {
                "parameters": [
                  {
                    "name": "cursor",
                    "value": "={{ $response.body.next_cursor }}"
                  }
                ]
              },
              "paginationCompleteWhen": "other",
              "completeExpression": "={{ $response.body.has_next_page === false }}"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        928,
        688
      ],
      "id": "b92bc339-d6f0-48c6-a0a5-2568dc5f57ff",
      "name": "Get Tweet Replies",
      "credentials": {
        "httpHeaderAuth": {
          "id": "lVKFxR2s5cquKAeb",
          "name": "TWITTERAPI.IO HEADER AUTH"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fc162a77-9a9d-4799-9dbf-88757ac4fc34",
              "leftValue": "={{ $json }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1728,
        960
      ],
      "id": "201645e4-d4b7-4b9f-ada5-96271ed80723",
      "name": "Filter empty ones"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1vb4g8FQSpXkiFD9XA32RdCgrv7EsfgxubmD4REu0Pns",
          "mode": "list",
          "cachedResultName": "Tweets Metadata",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vb4g8FQSpXkiFD9XA32RdCgrv7EsfgxubmD4REu0Pns/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1vb4g8FQSpXkiFD9XA32RdCgrv7EsfgxubmD4REu0Pns/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Video Path": "={{ $json.webViewLink}}",
            "Top Level Tweet": "={{ $('Get first tweet').item.json.tweets.first().text }}",
            "Author": "={{ $('Filter empty ones').item.json.author.userName}}",
            "Reply Tweet ": "={{ $('Filter empty ones').item.json.text}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Top Level Tweet",
              "displayName": "Top Level Tweet",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Reply Tweet ",
              "displayName": "Reply Tweet ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Author",
              "displayName": "Author",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Video Path",
              "displayName": "Video Path",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1728,
        1248
      ],
      "id": "62e22bf4-0292-49c0-827d-21b3fcf46e7a",
      "name": "Store Tweet Meta-Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "dFntNaEYJAOsYZIZ",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $json.videoUrl }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        1248
      ],
      "id": "91c877bb-745c-4c3c-999f-3477a395335e",
      "name": "Get Video FIles from APIFY",
      "credentials": {
        "httpQueryAuth": {
          "id": "7z0IPZTjEDXn9tkI",
          "name": "Apify AHMedia"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "name": "={{ $('APIFY Video Download Actor').item.json.id }}.mp4",
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "mode": "list",
          "value": "root",
          "cachedResultName": "/ (Root folder)"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        1376,
        1248
      ],
      "id": "876122dd-994d-4630-a95e-230c7a23d2df",
      "name": "Upload Files to Google Drive",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "reZwBdwR7JImRDL0",
          "name": "Google Drive account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/bytepulselabs~x-video-downloader/run-sync-get-dataset-items",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"proxy\": {\n        \"useApifyProxy\": false\n    },\n    \"urls\": [\n        {\n            \"url\": \"{{ $json.url }}\",\n            \"method\": \"GET\"\n        }\n    ]\n} ",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        1248
      ],
      "id": "74435d3d-88ab-4055-ac01-c5f1f127f785",
      "name": "APIFY Video Download Actor",
      "credentials": {
        "httpQueryAuth": {
          "id": "7z0IPZTjEDXn9tkI",
          "name": "Apify AHMedia"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Download Video and add to Sheet\n- This uses the Apify Actor \"X (Twitter) Video Downloader\" \n( https://console.apify.com/actors/JOgEdu6j61eqvVsRC/input )\n- At this time (08-04-2025) This actor runs at $.06 / video download\n- After download, Video will be moved to google drive with the filename [tweet id].mp4\n- The following Tweet metadata and path to video file are stored to google sheet:\n  Top Level Tweet\n  Author\n  Tweet Thread\n  Video Path",
        "height": 576,
        "width": 1920,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        928
      ],
      "id": "4aec0dee-f29e-45b5-8541-c06278afb85e",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg",
          "mode": "list",
          "cachedResultName": "Tweets To Scrape",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1177738232,
          "mode": "list",
          "cachedResultName": "tweets-to-scrape",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg/edit#gid=1177738232"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -144,
        688
      ],
      "id": "df2b936a-9fb4-4198-82ba-c1cc077676bf",
      "name": "Get row(s) in sheet",
      "executeOnce": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "XEt20yHVtBArkULc",
          "name": "adamhaley@gmail.com Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "tweets",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1120,
        688
      ],
      "id": "8f61ade8-0b7a-415a-bc11-8d9be64cd77c",
      "name": "Split Out"
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyHour"
            }
          ]
        },
        "documentId": {
          "__rl": true,
          "value": "17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg",
          "mode": "list",
          "cachedResultName": "Tweets To Scrape",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1177738232,
          "mode": "list",
          "cachedResultName": "tweets-to-scrape",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg/edit#gid=1177738232"
        },
        "event": "rowAdded",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTrigger",
      "typeVersion": 1,
      "position": [
        -512,
        1056
      ],
      "id": "2df7da9d-f32e-4e0d-906e-7847237ff186",
      "name": "Google Sheets Trigger",
      "credentials": {
        "googleSheetsTriggerOAuth2Api": {
          "id": "m1ZtqUedkLuUD9Oz",
          "name": "Google Sheets Trigger account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "66bce60f-7813-4011-9559-8b69ba6c5fb3",
              "leftValue": "={{ $json.author.id }}",
              "rightValue": "={{ $('Get first tweet').item.json.tweets.first().author.id }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1328,
        688
      ],
      "id": "8fd52d8b-9af2-4916-b009-c3ff94adff84",
      "name": "Filter"
    },
    {
      "parameters": {
        "sortFieldsUi": {
          "sortField": [
            {
              "fieldName": "createdAt"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        1520,
        688
      ],
      "id": "70b16a2e-3da4-4162-afbc-f57596c4055d",
      "name": "Sort"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "const url = $json.tweet_url;\nconst match = url.match(/x\\.com\\/([^\\/]+)\\/status\\/(\\d+)/) || url.match(/twitter\\.com\\/([^\\/]+)\\/status\\/(\\d+)/);\nif (!match) throw new Error('Invalid tweet URL');\nreturn {\n  tweet_id: match[2],\n  username: match[1]\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        64,
        624
      ],
      "id": "04963492-a90c-4833-afa0-93949c5a5521",
      "name": "Code"
    }
  ],
  "connections": {
    "Merge first tweet and others": {
      "main": [
        [
          {
            "node": "Filter empty ones",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get first tweet": {
      "main": [
        [
          {
            "node": "Merge first tweet and others",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Tweet Replies",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Conversation and Author ID": {
      "main": [
        []
      ]
    },
    "Get Tweet Replies": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter empty ones": {
      "main": [
        [
          {
            "node": "APIFY Video Download Actor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Video FIles from APIFY": {
      "main": [
        [
          {
            "node": "Upload Files to Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload Files to Google Drive": {
      "main": [
        [
          {
            "node": "Store Tweet Meta-Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "APIFY Video Download Actor": {
      "main": [
        [
          {
            "node": "Get Video FIles from APIFY",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets Trigger": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Merge first tweet and others",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Get first tweet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Google Sheets Trigger": {
      "documentId": "17DF55P-ea0u3XLPs1sbi7RAW34mJJSHv5G7d6S9aTwg",
      "sheetId": 1177738232,
      "lastIndexChecked": 3
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "When clicking ‘Test workflow’": [
      {
        "json": {
          "tweet_url": ""
        }
      }
    ]
  },
  "versionId": "171571bf-ead7-4eeb-88af-5c7af9019dad",
  "triggerCount": 1,
  "tags": []
}
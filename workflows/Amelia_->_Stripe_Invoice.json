{
  "createdAt": "2025-08-31T22:31:36.580Z",
  "updatedAt": "2025-08-31T22:31:36.000Z",
  "id": "XKCv2hDbwhWiFWWd",
  "name": "Amelia -> Stripe Invoice",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 9
            }
          ]
        }
      },
      "name": "Cron Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        80,
        240
      ],
      "id": "d5d58d8e-806e-4a9e-96d9-66eaeb95b093"
    },
    {
      "parameters": {
        "functionCode": "const discounts = {\n  \"Marc Torrisi\": 30,\n  \"Qualin Critch\": 50,\n  \"Shane Bentley\": 26,\n  \"Jo Sharpe\": 26,\n  \"Qualin Gritch\": 26,\n  \"Cheryl Solomon\": 26  \n};\n\nreturn items.map(item => {\n  const fullName = `${item.json.firstName} ${item.json.lastName}`;\n  const basePrice = item.json.booking_price ?? item.json.service_price ?? 0;\n  const discount = discounts[fullName] || 0;\n  const finalPrice = Math.max(basePrice - discount, 0);\n\n  item.json.finalPrice = finalPrice;\n  item.json.discount = discount;\n  return item;\n});"
      },
      "name": "Apply Discounts & Final Price",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1200,
        240
      ],
      "id": "22ecd1f5-b9f3-4bed-b61f-3108d96aafe1"
    },
    {
      "parameters": {
        "url": "https://api.stripe.com/v1/customers",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "email",
              "value": "={{ $json.email }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        80,
        592
      ],
      "id": "9d365b29-461f-41bd-9592-3e2a15f97567",
      "name": "Get Stripe Customer",
      "executeOnce": false
    },
    {
      "parameters": {
        "url": "https://ronnieadamowicz.com/wp-admin/admin-ajax.php?action=wpamelia_api&call=/api/v1/appointments",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "dates",
              "value": "={{ $now.format('y-MM-dd') }},{{ $now.format('y-MM-dd') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        304,
        240
      ],
      "id": "0f757298-92f5-4dc1-bdff-ee9f3744582a",
      "name": "Get Todays Bookings"
    },
    {
      "parameters": {
        "jsCode": "return JSON.parse( $input.first().json.data );"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        240
      ],
      "id": "ebe0349c-e623-4f6d-acac-01027cdc8074",
      "name": "Parse"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8bb3a713-18bc-462f-94ab-3a5ac8259809",
              "name": "booking_id",
              "value": "={{ $json.bookings[0].id }}",
              "type": "string"
            },
            {
              "id": "b2dba125-a90a-4ac3-bc4b-dc8b65b59508",
              "name": "customerId",
              "value": "={{ $json.bookings[0].customer.id }}",
              "type": "string"
            },
            {
              "id": "c093a6ca-1445-47ea-a65d-dacd280c0076",
              "name": "email",
              "value": "={{ $json.bookings[0].customer.email }}",
              "type": "string"
            },
            {
              "id": "e9c03b8a-c84d-4b3f-8306-4a734962fdfc",
              "name": "firstName",
              "value": "={{ $json.bookings[0].customer.firstName }}",
              "type": "string"
            },
            {
              "id": "008cf26b-41dd-483c-85b9-48ec991b2afd",
              "name": "lastName",
              "value": "={{ $json.bookings[0].customer.lastName }}",
              "type": "string"
            },
            {
              "id": "82ebf150-b1f7-469e-873a-3984f07b6d9b",
              "name": "bookingStart",
              "value": "={{ $json.bookingStart }}",
              "type": "string"
            },
            {
              "id": "6a6e9500-6026-42f6-a2c5-53a257414981",
              "name": "service_id",
              "value": "={{ $json.serviceId }}",
              "type": "string"
            },
            {
              "id": "9c5b47ee-8e2c-4434-8ca0-49f04b2627ff",
              "name": "service_name",
              "value": "={{ $json.service.name }}",
              "type": "string"
            },
            {
              "id": "20829e43-b5e7-405c-ba10-d860c1b6751d",
              "name": "service_price",
              "value": "={{ $json.service.price }}",
              "type": "string"
            },
            {
              "id": "1e7e2cd2-238e-4638-a28d-c6e511fc3dad",
              "name": "booking_price",
              "value": "={{ $json.service.price }}",
              "type": "string"
            },
            {
              "id": "aed4c695-f952-4dbb-a38e-05d8ac3067d1",
              "name": "payment_status",
              "value": "={{ $json.bookings[0].payments[0].status }}",
              "type": "string"
            },
            {
              "id": "7baa19ee-9f36-419e-a279-098df94b86ac",
              "name": "appointment_status",
              "value": "={{ $json.bookings[0].status }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        976,
        240
      ],
      "id": "21ff95ea-7399-4946-965f-69191dba39ee",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "content": "## Get Todays Bookings\n-9:00am schedule trigger\n-Get all of today's bookings",
        "height": 224,
        "width": 464
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "a325eac1-41f1-4707-9730-b606154685b9",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Format customer Booking Data\n\n- parse JSON\n- Flatten array\n- [Set]-extract customer object\n- Apply Discounts\n- add searchName\n- Filter out service_id=2, Already Paid, Canceled",
        "height": 464,
        "width": 1424,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        480,
        0
      ],
      "id": "c10bb0d0-762e-49b7-a115-7b24914edd66",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stripe.com/v1/invoices",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "customer",
              "value": "={{ $json.customer }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1936,
        528
      ],
      "id": "83c2f005-d66b-49c8-8774-81a2d890efdf",
      "name": "Create Stripe Invoice"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stripe.com/v1/invoiceitems",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "customer",
              "value": "={{ $json.customer }}"
            },
            {
              "name": "amount",
              "value": "={{ $json.amount }}"
            },
            {
              "name": "currency",
              "value": "={{ $json.currency }}"
            },
            {
              "name": "description",
              "value": "={{ $json.description }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1680,
        528
      ],
      "id": "25fcbe87-ba55-43af-baa3-fabef5eac0c5",
      "name": "Stripe Invoice Items"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return {\n  customer:$json.data[0].id,\n  amount: Math.floor($('Filter Service_id != 2 and Not Paid and Not Cancelled').item.json.finalPrice * 100),\n  currency: 'aud',\n  description: $('Map Stripe Emails / add searchName').item.json.service_name + ' on ' + $('Map Stripe Emails / add searchName').item.json.bookingStart\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        528
      ],
      "id": "868fada4-c42d-48f8-9c2d-89e627789efb",
      "name": "Map Line Item Data"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f4ebe7e7-a0e0-40dc-b663-615a9c776284",
              "leftValue": "={{ $json.service_id }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "425e9144-73d6-4c94-8caf-78aea5c0b751",
              "leftValue": "={{ $json.payment_status }}",
              "rightValue": "paid",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "f2a2b078-11e2-41f0-8027-a3d043e3bf5f",
              "leftValue": "={{ $json.appointment_status }}",
              "rightValue": "canceled",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1680,
        240
      ],
      "id": "46bdc7ff-cca7-4fb7-aa80-451146920294",
      "name": "Filter Service_id != 2 and Not Paid and Not Cancelled"
    },
    {
      "parameters": {
        "jsCode": "const root = $input.first().json.data;\nconst apptsObj = root?.appointments;\n\n\nif (!apptsObj || !Object.keys(apptsObj).length) return [];\n\nconst firstDateKey = Object.keys(apptsObj).sort()[0];\nconst day = apptsObj[firstDateKey];\nconst appointments = Array.isArray(day?.appointments) ? day.appointments : [];\n\n\nreturn appointments.map(a => ({ json: a }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        752,
        240
      ],
      "id": "fb071aad-d1fa-479a-b5b0-440599cde104",
      "name": "Flatten"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "//adjust emails for those who have different lookup email in Stripe\n// Map of Amelia email -> Stripe email\nlet emailMap = {\n  \"critch.q@gmail.com\": \"invoices@myintegra.com.au\",      // Qualin Critch\n  \"manofgod8766@gmail.com\": \"invoices@ndsp.com.au\",       // Shane Bentley\n  \"dohertyjarod@gmail.com\": \"shimonaf@spotlight.com.au\",  // Jarod Doherty\n  \"joanne.sharpe@ozemail.com.au\": \"ndispayments@adec.org.au\" // Joanne Sharpe\n\n};\n\nlet email = $json.email;\nif (emailMap[$json.email]) {\n  $json.originalEmail = $json.email; // keep original for reference\n  $json.email = emailMap[$json.email];\n}\n\n\n$json.searchName = ($json.firstName + ' ' + $json.lastName).toLowerCase();\n\n\nreturn $json;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1440,
        240
      ],
      "id": "66fc30de-c7fd-47c0-a9fb-924ba4a6b2f2",
      "name": "Map Stripe Emails / add searchName"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        528,
        496
      ],
      "id": "b79f4442-0a79-45d6-aa66-c13924843f2d",
      "name": "Split Out"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "31972656-01af-41f5-8986-516e942bcb75",
              "leftValue": "={{ $json.default_source }}",
              "rightValue": "src_",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        752,
        496
      ],
      "id": "1c864964-d4a7-449d-91b2-ac94e8198842",
      "name": "Filter Only With Payment Method"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a200b53a-b743-411d-b416-53bf40255e7a",
              "name": "data",
              "value": "={{[$json]}}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        960,
        496
      ],
      "id": "3957e45b-2782-4433-bbbf-9a5d94b6f2f2",
      "name": "Add data key"
    },
    {
      "parameters": {
        "content": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Multiple Stripe Records found\n- If found multiple Customer Accts, filter by the one with a payment method\n",
        "height": 448,
        "width": 1120,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        240,
        480
      ],
      "id": "096e62ad-7619-4871-9049-f964c1920e20",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e3770025-2fb8-4930-a351-19cbe7986535",
              "leftValue": "={{ $json.data }}",
              "rightValue": 1,
              "operator": {
                "type": "array",
                "operation": "lengthGt",
                "rightType": "number"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        288,
        592
      ],
      "id": "086ff23f-18c2-4998-b28e-f00b9830d6c6",
      "name": "If Multiple Records"
    },
    {
      "parameters": {
        "content": "## Create Record In Stripe\n",
        "height": 240,
        "width": 512
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1376,
        688
      ],
      "id": "c35d9bdb-387d-4de3-892d-f780c1ce3934",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.stripe.com/v1/customers",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "=name",
              "value": "={{ $json.data[0].name }}"
            },
            {
              "name": "email",
              "value": "={{ $json.data[0].email }}"
            },
            {
              "name": "description",
              "value": "={{ $json.data[0].description }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1680,
        736
      ],
      "id": "2b20baa8-a713-46d9-91ae-ee63f0f1999c",
      "name": "Create Stripe Customer"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.data }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "array",
                      "operation": "lengthGt",
                      "rightType": "number"
                    },
                    "id": "89de3963-97ca-4de4-adc1-3243167e99fa"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "stripe_record_exists"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2b7e418d-5972-4af3-9da3-0dadffb6de6e",
                    "leftValue": "={{ $json.data }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "array",
                      "operation": "lengthLt",
                      "rightType": "number"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "stripe_record_does_not_exist"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1200,
        544
      ],
      "id": "69584b81-6984-4d6d-8466-92278ab4c8fc",
      "name": "Stripe Record Exists Or Not"
    }
  ],
  "connections": {
    "Cron Trigger": {
      "main": [
        [
          {
            "node": "Get Todays Bookings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apply Discounts & Final Price": {
      "main": [
        [
          {
            "node": "Map Stripe Emails / add searchName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Stripe Customer": {
      "main": [
        [
          {
            "node": "If Multiple Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Todays Bookings": {
      "main": [
        [
          {
            "node": "Parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse": {
      "main": [
        [
          {
            "node": "Flatten",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Apply Discounts & Final Price",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stripe Invoice Items": {
      "main": [
        [
          {
            "node": "Create Stripe Invoice",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map Line Item Data": {
      "main": [
        [
          {
            "node": "Stripe Invoice Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Service_id != 2 and Not Paid and Not Cancelled": {
      "main": [
        [
          {
            "node": "Get Stripe Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Flatten": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Map Stripe Emails / add searchName": {
      "main": [
        [
          {
            "node": "Filter Service_id != 2 and Not Paid and Not Cancelled",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Filter Only With Payment Method",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Only With Payment Method": {
      "main": [
        [
          {
            "node": "Add data key",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add data key": {
      "main": [
        [
          {
            "node": "Stripe Record Exists Or Not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If Multiple Records": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stripe Record Exists Or Not",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Stripe Record Exists Or Not": {
      "main": [
        [
          {
            "node": "Map Line Item Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create Stripe Customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Stripe Customer": {
      "main": [
        [
          {
            "node": "Map Line Item Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "Cron Trigger": [
      {
        "json": {}
      }
    ]
  },
  "versionId": "001e64bd-0822-4a8e-af92-0e2ebfd8b552",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-31T22:31:36.591Z",
      "updatedAt": "2025-08-31T22:31:36.591Z",
      "role": "workflow:owner",
      "workflowId": "XKCv2hDbwhWiFWWd",
      "projectId": "nZwUmEIL638ig6xE"
    }
  ],
  "tags": []
}
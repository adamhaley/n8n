{
  "createdAt": "2025-08-06T04:43:33.801Z",
  "updatedAt": "2025-08-06T04:44:09.000Z",
  "id": "GArJAPWJG0gSFYg6",
  "name": "HTTP Pagination",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1120,
        224
      ],
      "typeVersion": 1,
      "id": "e9901712-cd15-4bec-9c4a-20f616ec56e7"
    },
    {
      "parameters": {
        "url": "={{$node[\"Config URL\"].json[\"next\"]}}",
        "options": {},
        "queryParametersUi": {
          "parameter": [
            {
              "name": "hapikey",
              "value": "<YOUR_API_KEY>"
            },
            {
              "name": "limit",
              "value": "100"
            }
          ]
        }
      },
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -720,
        224
      ],
      "typeVersion": 1,
      "id": "de3410e2-fc57-4b62-9681-c56739585c30"
    },
    {
      "parameters": {},
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -528,
        224
      ],
      "typeVersion": 1,
      "id": "0b4beb62-6a61-46ed-9e72-7a74ed7178b7"
    },
    {
      "parameters": {
        "functionCode": "return new Promise((resolve, reject) => {\n      setTimeout(() => { resolve([{ json: {} }]) }, 5000);\n    })\n"
      },
      "name": "Wait",
      "type": "n8n-nodes-base.function",
      "position": [
        -320,
        224
      ],
      "typeVersion": 1,
      "id": "2af05cd7-1208-4c18-aec9-4117fca4fd7d"
    },
    {
      "parameters": {
        "functionCode": "\nlet next = 'https://api.hubapi.com/crm/v3/objects/contacts'\n\nif (items[0].json.next) {\n  next = items[0].json.next\n}\n\nreturn [\n  {\n    json: {\n      next : next\n    }\n  }\n]"
      },
      "name": "Config URL",
      "type": "n8n-nodes-base.function",
      "position": [
        -928,
        224
      ],
      "typeVersion": 1,
      "id": "1057af8a-bc28-491d-9535-c524a857b1b3"
    },
    {
      "parameters": {
        "conditions": {
          "string": [],
          "boolean": [
            {
              "value1": "={{$node[\"HTTP Request\"].json[\"paging\"] ? true : false}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Check if pagination?",
      "type": "n8n-nodes-base.if",
      "position": [
        -80,
        224
      ],
      "typeVersion": 1,
      "id": "e23d82c5-3847-4db5-acee-12d8fcd289cc"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "next",
              "value": "={{$node[\"HTTP Request\"].json[\"paging\"][\"next\"][\"link\"]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set next URL",
      "type": "n8n-nodes-base.set",
      "position": [
        -432,
        -48
      ],
      "executeOnce": true,
      "typeVersion": 1,
      "id": "a16f4226-90a3-49cb-8868-26fe1f82baf0"
    },
    {
      "parameters": {
        "functionCode": "const allData = []\n\nlet counter = 0;\ndo {\n  try {\n    const items = $items(\"HTTP Request\", 0, counter).map(item => item.json.results);\n                    \n    const aja = items[0].map(item => {\n      return { json: item }\n    })    \n    \n    allData.push.apply(allData, aja);\n    //allData.push($items(\"Increment\", 0, counter));\n  } catch (error) {\n    return allData;  \n  }\n\n  counter++;\n} while(true);\n\n"
      },
      "name": "Combine all data",
      "type": "n8n-nodes-base.function",
      "position": [
        176,
        320
      ],
      "typeVersion": 1,
      "id": "acac4bf4-0f79-4dd3-8a66-d0d93e8cbc96"
    }
  ],
  "connections": {
    "NoOp": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check if pagination?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config URL": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set next URL": {
      "main": [
        [
          {
            "node": "Config URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if pagination?": {
      "main": [
        [
          {
            "node": "Set next URL",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Combine all data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Config URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "d0c930f6-643e-439b-9ad3-4d61cb41ee5f",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-08-06T04:43:33.808Z",
      "updatedAt": "2025-08-06T04:43:33.808Z",
      "role": "workflow:owner",
      "workflowId": "GArJAPWJG0gSFYg6",
      "projectId": "nZwUmEIL638ig6xE"
    }
  ],
  "tags": []
}